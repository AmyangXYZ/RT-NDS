// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: packet/packet.proto

package packet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for packet types
type PacketType int32

const (
	PacketType_UNKNOWN_PACKET_TYPE PacketType = 0
	// High Priority: Time-aware queue, ACK required
	PacketType_JOIN_REQUEST    PacketType = 1
	PacketType_JOIN_RESPONSE   PacketType = 2
	PacketType_ERROR_MESSAGE   PacketType = 3
	PacketType_DATA_REGISTER   PacketType = 4
	PacketType_DATA_INTEREST   PacketType = 5
	PacketType_DATA_CONTENT    PacketType = 6
	PacketType_ACKNOWLEDGEMENT PacketType = 7
	// Medium Priority: ACK required
	PacketType_STATISTICS    PacketType = 8
	PacketType_CONFIGURATION PacketType = 9
	// Low Priority: Best-effort delivery
	PacketType_HEARTBEAT PacketType = 10
)

// Enum value maps for PacketType.
var (
	PacketType_name = map[int32]string{
		0:  "UNKNOWN_PACKET_TYPE",
		1:  "JOIN_REQUEST",
		2:  "JOIN_RESPONSE",
		3:  "ERROR_MESSAGE",
		4:  "DATA_REGISTER",
		5:  "DATA_INTEREST",
		6:  "DATA_CONTENT",
		7:  "ACKNOWLEDGEMENT",
		8:  "STATISTICS",
		9:  "CONFIGURATION",
		10: "HEARTBEAT",
	}
	PacketType_value = map[string]int32{
		"UNKNOWN_PACKET_TYPE": 0,
		"JOIN_REQUEST":        1,
		"JOIN_RESPONSE":       2,
		"ERROR_MESSAGE":       3,
		"DATA_REGISTER":       4,
		"DATA_INTEREST":       5,
		"DATA_CONTENT":        6,
		"ACKNOWLEDGEMENT":     7,
		"STATISTICS":          8,
		"CONFIGURATION":       9,
		"HEARTBEAT":           10,
	}
)

func (x PacketType) Enum() *PacketType {
	p := new(PacketType)
	*p = x
	return p
}

func (x PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_packet_proto_enumTypes[0].Descriptor()
}

func (PacketType) Type() protoreflect.EnumType {
	return &file_packet_packet_proto_enumTypes[0]
}

func (x PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketType.Descriptor instead.
func (PacketType) EnumDescriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0}
}

// Enum for priority levels
type Priority int32

const (
	Priority_UNKNOWN_PRIORITY Priority = 0
	Priority_LOW              Priority = 1
	Priority_MEDIUM           Priority = 2
	Priority_HIGH             Priority = 3
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "UNKNOWN_PRIORITY",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
	}
	Priority_value = map[string]int32{
		"UNKNOWN_PRIORITY": 0,
		"LOW":              1,
		"MEDIUM":           2,
		"HIGH":             3,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_packet_proto_enumTypes[1].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_packet_packet_proto_enumTypes[1]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{1}
}

// Enum for client type
type ClientType int32

const (
	ClientType_UNKNOWN_CLIENT_TYPE ClientType = 0
	ClientType_SATELLITE           ClientType = 1
	ClientType_RECEIVER            ClientType = 2
	ClientType_UAV                 ClientType = 3
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "UNKNOWN_CLIENT_TYPE",
		1: "SATELLITE",
		2: "RECEIVER",
		3: "UAV",
	}
	ClientType_value = map[string]int32{
		"UNKNOWN_CLIENT_TYPE": 0,
		"SATELLITE":           1,
		"RECEIVER":            2,
		"UAV":                 3,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_packet_proto_enumTypes[2].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_packet_packet_proto_enumTypes[2]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{2}
}

// Enum for error codes
type ErrorCode int32

const (
	ErrorCode_UNKNOWN_ERROR         ErrorCode = 0
	ErrorCode_AUTHENTICATION_FAILED ErrorCode = 1
	ErrorCode_DATA_REGISTER_FAILED  ErrorCode = 2
	ErrorCode_DATA_NOT_FOUND        ErrorCode = 3
	ErrorCode_DATA_NOT_READY        ErrorCode = 4
	ErrorCode_DATA_CHECK_SUM_FAILED ErrorCode = 5
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "UNKNOWN_ERROR",
		1: "AUTHENTICATION_FAILED",
		2: "DATA_REGISTER_FAILED",
		3: "DATA_NOT_FOUND",
		4: "DATA_NOT_READY",
		5: "DATA_CHECK_SUM_FAILED",
	}
	ErrorCode_value = map[string]int32{
		"UNKNOWN_ERROR":         0,
		"AUTHENTICATION_FAILED": 1,
		"DATA_REGISTER_FAILED":  2,
		"DATA_NOT_FOUND":        3,
		"DATA_NOT_READY":        4,
		"DATA_CHECK_SUM_FAILED": 5,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_packet_packet_proto_enumTypes[3].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_packet_packet_proto_enumTypes[3]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{3}
}

// Common header for all packets
type PacketHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion uint32     `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	PacketUid       uint32     `protobuf:"varint,2,opt,name=packet_uid,json=packetUid,proto3" json:"packet_uid,omitempty"`
	PacketType      PacketType `protobuf:"varint,3,opt,name=packet_type,json=packetType,proto3,enum=rtdex.PacketType" json:"packet_type,omitempty"`
	SequenceNumber  uint32     `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	SourceId        uint32     `protobuf:"varint,5,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestinationId   uint32     `protobuf:"varint,6,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	Priority        Priority   `protobuf:"varint,7,opt,name=priority,proto3,enum=rtdex.Priority" json:"priority,omitempty"`
	Timestamp       uint64     `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PayloadLength   uint32     `protobuf:"varint,9,opt,name=payload_length,json=payloadLength,proto3" json:"payload_length,omitempty"`
}

func (x *PacketHeader) Reset() {
	*x = PacketHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketHeader) ProtoMessage() {}

func (x *PacketHeader) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketHeader.ProtoReflect.Descriptor instead.
func (*PacketHeader) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0}
}

func (x *PacketHeader) GetProtocolVersion() uint32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *PacketHeader) GetPacketUid() uint32 {
	if x != nil {
		return x.PacketUid
	}
	return 0
}

func (x *PacketHeader) GetPacketType() PacketType {
	if x != nil {
		return x.PacketType
	}
	return PacketType_UNKNOWN_PACKET_TYPE
}

func (x *PacketHeader) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *PacketHeader) GetSourceId() uint32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *PacketHeader) GetDestinationId() uint32 {
	if x != nil {
		return x.DestinationId
	}
	return 0
}

func (x *PacketHeader) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_UNKNOWN_PRIORITY
}

func (x *PacketHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PacketHeader) GetPayloadLength() uint32 {
	if x != nil {
		return x.PayloadLength
	}
	return 0
}

// Join Request
type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace           string     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                ClientType `protobuf:"varint,3,opt,name=type,proto3,enum=rtdex.ClientType" json:"type,omitempty"`
	AuthenticationToken uint32     `protobuf:"varint,4,opt,name=authentication_token,json=authenticationToken,proto3" json:"authentication_token,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{1}
}

func (x *JoinRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JoinRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *JoinRequest) GetType() ClientType {
	if x != nil {
		return x.Type
	}
	return ClientType_UNKNOWN_CLIENT_TYPE
}

func (x *JoinRequest) GetAuthenticationToken() uint32 {
	if x != nil {
		return x.AuthenticationToken
	}
	return 0
}

// Join Response
type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken uint32 `protobuf:"varint,2,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{2}
}

func (x *JoinResponse) GetSessionToken() uint32 {
	if x != nil {
		return x.SessionToken
	}
	return 0
}

// Data Register
type DataRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Freshness uint64 `protobuf:"varint,2,opt,name=freshness,proto3" json:"freshness,omitempty"` // in seconds
	Size      uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *DataRegister) Reset() {
	*x = DataRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRegister) ProtoMessage() {}

func (x *DataRegister) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRegister.ProtoReflect.Descriptor instead.
func (*DataRegister) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{3}
}

func (x *DataRegister) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataRegister) GetFreshness() uint64 {
	if x != nil {
		return x.Freshness
	}
	return 0
}

func (x *DataRegister) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Data Interest
type DataInterest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DataInterest) Reset() {
	*x = DataInterest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInterest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInterest) ProtoMessage() {}

func (x *DataInterest) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInterest.ProtoReflect.Descriptor instead.
func (*DataInterest) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{4}
}

func (x *DataInterest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Data Content
type DataContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Checksum uint32 `protobuf:"varint,2,opt,name=checksum,proto3" json:"checksum,omitempty"` // CRC32
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataContent) Reset() {
	*x = DataContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataContent) ProtoMessage() {}

func (x *DataContent) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataContent.ProtoReflect.Descriptor instead.
func (*DataContent) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{5}
}

func (x *DataContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataContent) GetChecksum() uint32 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *DataContent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Acknowledgement
type Acknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latency int64 `protobuf:"varint,1,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *Acknowledgement) Reset() {
	*x = Acknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledgement) ProtoMessage() {}

func (x *Acknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledgement.ProtoReflect.Descriptor instead.
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{6}
}

func (x *Acknowledgement) GetLatency() int64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

// Error Message
type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=rtdex.ErrorCode" json:"error_code,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{7}
}

func (x *ErrorMessage) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_UNKNOWN_ERROR
}

// Statistics
type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId  uint32 `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	StatusCode uint32 `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{8}
}

func (x *Statistics) GetStationId() uint32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *Statistics) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

// Configuration
type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId  uint32 `protobuf:"varint,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	ConfigData []byte `protobuf:"bytes,2,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{9}
}

func (x *Configuration) GetStationId() uint32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *Configuration) GetConfigData() []byte {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

// Heartbeat
type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{10}
}

func (x *Heartbeat) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Main packet message that encapsulates all types
type RTDEXPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *PacketHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*RTDEXPacket_JoinRequest
	//	*RTDEXPacket_JoinResponse
	//	*RTDEXPacket_DataRegister
	//	*RTDEXPacket_DataInterest
	//	*RTDEXPacket_DataContent
	//	*RTDEXPacket_Acknowledgement
	//	*RTDEXPacket_ErrorMessage
	//	*RTDEXPacket_Statistics
	//	*RTDEXPacket_Configuration
	//	*RTDEXPacket_Heartbeat
	Payload isRTDEXPacket_Payload `protobuf_oneof:"payload"`
}

func (x *RTDEXPacket) Reset() {
	*x = RTDEXPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTDEXPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTDEXPacket) ProtoMessage() {}

func (x *RTDEXPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTDEXPacket.ProtoReflect.Descriptor instead.
func (*RTDEXPacket) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{11}
}

func (x *RTDEXPacket) GetHeader() *PacketHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *RTDEXPacket) GetPayload() isRTDEXPacket_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *RTDEXPacket) GetJoinRequest() *JoinRequest {
	if x, ok := x.GetPayload().(*RTDEXPacket_JoinRequest); ok {
		return x.JoinRequest
	}
	return nil
}

func (x *RTDEXPacket) GetJoinResponse() *JoinResponse {
	if x, ok := x.GetPayload().(*RTDEXPacket_JoinResponse); ok {
		return x.JoinResponse
	}
	return nil
}

func (x *RTDEXPacket) GetDataRegister() *DataRegister {
	if x, ok := x.GetPayload().(*RTDEXPacket_DataRegister); ok {
		return x.DataRegister
	}
	return nil
}

func (x *RTDEXPacket) GetDataInterest() *DataInterest {
	if x, ok := x.GetPayload().(*RTDEXPacket_DataInterest); ok {
		return x.DataInterest
	}
	return nil
}

func (x *RTDEXPacket) GetDataContent() *DataContent {
	if x, ok := x.GetPayload().(*RTDEXPacket_DataContent); ok {
		return x.DataContent
	}
	return nil
}

func (x *RTDEXPacket) GetAcknowledgement() *Acknowledgement {
	if x, ok := x.GetPayload().(*RTDEXPacket_Acknowledgement); ok {
		return x.Acknowledgement
	}
	return nil
}

func (x *RTDEXPacket) GetErrorMessage() *ErrorMessage {
	if x, ok := x.GetPayload().(*RTDEXPacket_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return nil
}

func (x *RTDEXPacket) GetStatistics() *Statistics {
	if x, ok := x.GetPayload().(*RTDEXPacket_Statistics); ok {
		return x.Statistics
	}
	return nil
}

func (x *RTDEXPacket) GetConfiguration() *Configuration {
	if x, ok := x.GetPayload().(*RTDEXPacket_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (x *RTDEXPacket) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetPayload().(*RTDEXPacket_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isRTDEXPacket_Payload interface {
	isRTDEXPacket_Payload()
}

type RTDEXPacket_JoinRequest struct {
	JoinRequest *JoinRequest `protobuf:"bytes,2,opt,name=join_request,json=joinRequest,proto3,oneof"`
}

type RTDEXPacket_JoinResponse struct {
	JoinResponse *JoinResponse `protobuf:"bytes,3,opt,name=join_response,json=joinResponse,proto3,oneof"`
}

type RTDEXPacket_DataRegister struct {
	DataRegister *DataRegister `protobuf:"bytes,4,opt,name=data_register,json=dataRegister,proto3,oneof"`
}

type RTDEXPacket_DataInterest struct {
	DataInterest *DataInterest `protobuf:"bytes,5,opt,name=data_interest,json=dataInterest,proto3,oneof"`
}

type RTDEXPacket_DataContent struct {
	DataContent *DataContent `protobuf:"bytes,6,opt,name=data_content,json=dataContent,proto3,oneof"`
}

type RTDEXPacket_Acknowledgement struct {
	Acknowledgement *Acknowledgement `protobuf:"bytes,7,opt,name=acknowledgement,proto3,oneof"`
}

type RTDEXPacket_ErrorMessage struct {
	ErrorMessage *ErrorMessage `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

type RTDEXPacket_Statistics struct {
	Statistics *Statistics `protobuf:"bytes,9,opt,name=statistics,proto3,oneof"`
}

type RTDEXPacket_Configuration struct {
	Configuration *Configuration `protobuf:"bytes,10,opt,name=configuration,proto3,oneof"`
}

type RTDEXPacket_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,11,opt,name=heartbeat,proto3,oneof"`
}

func (*RTDEXPacket_JoinRequest) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_JoinResponse) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_DataRegister) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_DataInterest) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_DataContent) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_Acknowledgement) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_ErrorMessage) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_Statistics) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_Configuration) isRTDEXPacket_Payload() {}

func (*RTDEXPacket_Heartbeat) isRTDEXPacket_Payload() {}

var File_packet_packet_proto protoreflect.FileDescriptor

var file_packet_packet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72, 0x74, 0x64, 0x65, 0x78, 0x22, 0xeb, 0x02, 0x0a,
	0x0c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72,
	0x74, 0x64, 0x65, 0x78, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x72, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x33, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x54, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x22, 0x0a,
	0x0c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x22, 0x3f, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x4f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x29, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x90, 0x05, 0x0a,
	0x0b, 0x52, 0x54, 0x44, 0x45, 0x58, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72,
	0x74, 0x64, 0x65, 0x78, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x74, 0x64, 0x65, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x42, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78,
	0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a,
	0xdc, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x45, 0x53, 0x54, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x4b, 0x4e, 0x4f,
	0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x54, 0x41, 0x54, 0x49, 0x53, 0x54, 0x49, 0x43, 0x53, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12,
	0x0d, 0x0a, 0x09, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x10, 0x0a, 0x2a, 0x3f,
	0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x2a,
	0x4b, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x41, 0x54, 0x45, 0x4c, 0x4c,
	0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x41, 0x56, 0x10, 0x03, 0x2a, 0x96, 0x01, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x55, 0x4d, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packet_packet_proto_rawDescOnce sync.Once
	file_packet_packet_proto_rawDescData = file_packet_packet_proto_rawDesc
)

func file_packet_packet_proto_rawDescGZIP() []byte {
	file_packet_packet_proto_rawDescOnce.Do(func() {
		file_packet_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_packet_proto_rawDescData)
	})
	return file_packet_packet_proto_rawDescData
}

var file_packet_packet_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_packet_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_packet_packet_proto_goTypes = []any{
	(PacketType)(0),         // 0: rtdex.PacketType
	(Priority)(0),           // 1: rtdex.Priority
	(ClientType)(0),         // 2: rtdex.ClientType
	(ErrorCode)(0),          // 3: rtdex.ErrorCode
	(*PacketHeader)(nil),    // 4: rtdex.PacketHeader
	(*JoinRequest)(nil),     // 5: rtdex.JoinRequest
	(*JoinResponse)(nil),    // 6: rtdex.JoinResponse
	(*DataRegister)(nil),    // 7: rtdex.DataRegister
	(*DataInterest)(nil),    // 8: rtdex.DataInterest
	(*DataContent)(nil),     // 9: rtdex.DataContent
	(*Acknowledgement)(nil), // 10: rtdex.Acknowledgement
	(*ErrorMessage)(nil),    // 11: rtdex.ErrorMessage
	(*Statistics)(nil),      // 12: rtdex.Statistics
	(*Configuration)(nil),   // 13: rtdex.Configuration
	(*Heartbeat)(nil),       // 14: rtdex.Heartbeat
	(*RTDEXPacket)(nil),     // 15: rtdex.RTDEXPacket
}
var file_packet_packet_proto_depIdxs = []int32{
	0,  // 0: rtdex.PacketHeader.packet_type:type_name -> rtdex.PacketType
	1,  // 1: rtdex.PacketHeader.priority:type_name -> rtdex.Priority
	2,  // 2: rtdex.JoinRequest.type:type_name -> rtdex.ClientType
	3,  // 3: rtdex.ErrorMessage.error_code:type_name -> rtdex.ErrorCode
	4,  // 4: rtdex.RTDEXPacket.header:type_name -> rtdex.PacketHeader
	5,  // 5: rtdex.RTDEXPacket.join_request:type_name -> rtdex.JoinRequest
	6,  // 6: rtdex.RTDEXPacket.join_response:type_name -> rtdex.JoinResponse
	7,  // 7: rtdex.RTDEXPacket.data_register:type_name -> rtdex.DataRegister
	8,  // 8: rtdex.RTDEXPacket.data_interest:type_name -> rtdex.DataInterest
	9,  // 9: rtdex.RTDEXPacket.data_content:type_name -> rtdex.DataContent
	10, // 10: rtdex.RTDEXPacket.acknowledgement:type_name -> rtdex.Acknowledgement
	11, // 11: rtdex.RTDEXPacket.error_message:type_name -> rtdex.ErrorMessage
	12, // 12: rtdex.RTDEXPacket.statistics:type_name -> rtdex.Statistics
	13, // 13: rtdex.RTDEXPacket.configuration:type_name -> rtdex.Configuration
	14, // 14: rtdex.RTDEXPacket.heartbeat:type_name -> rtdex.Heartbeat
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_packet_packet_proto_init() }
func file_packet_packet_proto_init() {
	if File_packet_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_packet_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PacketHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DataRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DataInterest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DataContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Acknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RTDEXPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packet_packet_proto_msgTypes[11].OneofWrappers = []any{
		(*RTDEXPacket_JoinRequest)(nil),
		(*RTDEXPacket_JoinResponse)(nil),
		(*RTDEXPacket_DataRegister)(nil),
		(*RTDEXPacket_DataInterest)(nil),
		(*RTDEXPacket_DataContent)(nil),
		(*RTDEXPacket_Acknowledgement)(nil),
		(*RTDEXPacket_ErrorMessage)(nil),
		(*RTDEXPacket_Statistics)(nil),
		(*RTDEXPacket_Configuration)(nil),
		(*RTDEXPacket_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_packet_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_packet_proto_goTypes,
		DependencyIndexes: file_packet_packet_proto_depIdxs,
		EnumInfos:         file_packet_packet_proto_enumTypes,
		MessageInfos:      file_packet_packet_proto_msgTypes,
	}.Build()
	File_packet_packet_proto = out.File
	file_packet_packet_proto_rawDesc = nil
	file_packet_packet_proto_goTypes = nil
	file_packet_packet_proto_depIdxs = nil
}
